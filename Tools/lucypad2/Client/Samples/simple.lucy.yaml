# match on any token with ___, you can name a wildcard slot by using (entityName:___)
# group alternate tokens together using '(' ')' and '|' ==> (token1|token2|token3)
# put quantifiers on any token grouping...
#   '?' ==> zero or one
#   '*' ==> zero or more
#   '+' ==> one or more
#   '#' ==> max number of tokens to consume
#   '~' ==> use fuzzy matching for the tokens in the group.
# Entities can be placed into a pattern with '@', creating a compound entity result.
locale: en
externalEntities: 
  - age
  - boolean
  - currency
  - datetime
  - dimension
  - email
  - guid
  - hashtag
  - ip
  - mention
  - integer
  - number
  - numberrange
  - ordinal
  - percentage
  - phonenumber
  - temperature
  - url
  - quotedtext
macros:
entities:
  - name: '@name'
    patterns:
      - name is (value:___)
      - call me (value:___)

  - name: '@color'
    patterns:
      - red
      - [green, (verde)~]
      - [blue, (aqua)~]

  - name: '@favoriteColor'
    examples:
     - I like blue
     - red is my favorite
    patterns:
      - I (prefer|like|love) @color
      - (my)? (fav|favorite)~  (color)? is @color
      - '@color is my (fav|favorite)~'

  # match using a characater regex pattern /regex/
  - name: '@tailNumber'
    examples:
      - N185LM
    patterns: 
      - /N[\dA-Z]{3,5}/
